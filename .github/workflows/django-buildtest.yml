name: Django CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        sudo apt-get update 
        python3 -m pip install --upgrade pip
        pip3 install -r backend/requirements.txt
    - name: Run Tests
      run: |
        python3 backend/manage.py test
      env:
        SILVERCARE_SECRET_KEY: ${{ secrets.SILVERCARE_SECRET_KEY }}
        SILVERCARE_DATABASE_NAME: ${{ secrets.SILVERCARE_DATABASE_NAME }}
        SILVERCARE_DATABASE_USER: ${{ secrets.SILVERCARE_DATABASE_USER }}
        SILVERCARE_DATABASE_PASSWORD: ${{ secrets.SILVERCARE_DATABASE_PASSWORD }}
        SILVERCARE_EMAIL_HOST: ${{ secrets.SILVERCARE_EMAIL_HOST }}
        SILVERCARE_EMAIL_HOST_USER: ${{ secrets.SILVERCARE_EMAIL_HOST_USER }}
        SILVERCARE_EMAIL_HOST_PASSWORD: ${{ secrets.SILVERCARE_EMAIL_HOST_PASSWORD }}
        SILVERCARE_EMAIL_PORT: ${{ secrets.SILVERCARE_EMAIL_PORT }}
        SILVERCARE_EMAIL_GMAIL_PASS: ${{ secrets.SILVERCARE_EMAIL_GMAIL_PASSWORD }}
        SILVERCARE_PATH_TO_FIMG: ${{ secrets.SILVERCARE_PATH_TO_FIMG }}
        SILVERCARE_BASE_URL: ${{ secrets.SILVERCARE_BASE_URL }}
        SILVERCARE_STRIPE_SECRET_KEY: ${{ secrets.SILVERCARE_STRIPE_SECRET_KEY }}
        SILVERCARE_STRIPE_PUBLIC_KEY: ${{ secrets.SILVERCARE_STRIPE_PUBLIC_KEY }}
        SILVERCARE_STRIPE_WEBHOOK_KEY: ${{ secrets.SILVERCARE_STRIPE_WEBHOOK_KEY }}
        SILVERCARE_PROD_STRIPE_PUBLIC_KEY: ${{ secrets.SILVERCARE_PROD_STRIPE_PUBLIC_KEY }}
        SILVERCARE_PROD_STRIPE_SECRET_KEY: ${{ secrets.SILVERCARE_PROD_STRIPE_SECRET_KEY }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Creating connection
      shell: bash
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_CONNECT_KEY }}
        SERVER_ADDR: ${{ secrets.SERVER_ADDR }}

      # Connection with server
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        ssh-keyscan -H $SERVER_ADDR > ~/.ssh/known_hosts
    - name: Publish
      shell: bash
      env:
        SERVER_ADDR: ${{ secrets.SERVER_ADDR }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        scp -prq ./backend ${SERVER_USER}@${SERVER_ADDR}:~
    - name: Run app
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_ADDR }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_CONNECT_KEY }}
        port: 22
        script_stop: true
        script: |
          ./setup_env.sh
          cd backend
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          python3 manage.py makemigrations --merge
          python3 manage.py migrate --noinput
          screen -X -S backend quit || true
          screen -dmS backend python3 manage.py runserver
